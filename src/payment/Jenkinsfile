pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'sonar_server'
        TRIVY_SEVERITY = 'HIGH,CRITICAL'
        DOCKER_IMAGE = "sirishak83/payment:${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'Git_credentials', url: 'https://github.com/sirisha-k83/ultimate-devops-project-demo.git', branch: 'main'
            }
        }

      stage('Build') {
           steps {
             dir('src/payment') {
             sh 'npm install'
             sh 'npm run build'
        }
    }
}
stage('SonarQube Analysis') {
    environment {
        // Jenkins credentials and SonarQube server URL are configured in global tools.
        SONAR_TOKEN = credentials('sonar_token') 
    }
    steps {
        dir('src/payment') {
            withSonarQubeEnv("${SONARQUBE_SERVER}") {
                sh '''
                    sonar-scanner \
                    -Dsonar.projectKey=payment \
                    -Dsonar.projectName=payment \
                    -Dsonar.sources=. \
                    -Dsonar.login=$SONAR_TOKEN
                '''
            }
        }
    }
}


   stage('TRIVY FS Scan') {
  steps {
    sh '''
      trivy fs --severity HIGH,CRITICAL --exit-code 0 --no-progress . > trivyfs.txt
    '''
  }
}
        stage('Docker Build & Push') {
            steps {
                dir('src/payment') {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'docker_login') {
                            def app = docker.build("${DOCKER_IMAGE}")
                            app.push()
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}