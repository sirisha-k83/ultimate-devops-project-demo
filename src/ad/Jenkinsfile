pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'sonar_server'
        TRIVY_SEVERITY = 'HIGH,CRITICAL'
        DOCKER_IMAGE = "myregistry/payment-service:${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'Git_credentials', url: 'https://github.com/sirisha-k83/ultimate-devops-project-demo.git', branch: 'main'
            }
        }

      stage('Build') {
           steps {
             dir('src/ad') {
             sh './gradlew clean build'
        }
    }
}
       stage('SonarQube Analysis') {
        environment {
        SONAR_TOKEN = credentials('sonar_token')
         }
        steps {
        dir('src/ad') {
            withSonarQubeEnv("${SONARQUBE_SERVER}") {
                sh """
                    sonar-scanner \
                    -Dsonar.projectKey=ad \
                    -Dsonar.projectName=ad \
                    -Dsonar.login=$SONAR_TOKEN \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=${env.SONAR_HOST_URL}
                """
            }
        }
    }
}


        stage('Security Scan (Trivy)') {
            steps {
                dir('src/ad') {
                    sh "trivy fs --severity ${TRIVY_SEVERITY} --exit-code 0 --no-progress ."
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                dir('src/ad') {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'docker_login') {
                            def app = docker.build("${DOCKER_IMAGE}")
                            app.push()
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
